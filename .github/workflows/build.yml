name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.3.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached virtual environment
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root
      - name: Install library
        run: |
          poetry install --no-interaction

      - name: Run prospector
        run: |
          cd ${GITHUB_WORKSPACE}
          poetry run prospector -A -T -0 -o text -o json:${GITHUB_WORKSPACE}/.github/outputs/prospector.json .
      - name: Annotate with Prospector results
        uses: KarlTDebiec/LinterPrinter@feature/initial-implementation
        with:
          tool: prospector
          tool_infile: .github/outputs/prospector.json
          files_to_annotate_infile: .github/outputs/all_changed_and_modified_files.json
      - name: pydocstyle # Run separately because prospector does not honor pyproject.toml
        run: |
          cd ${GITHUB_WORKSPACE}
          poetry run pydocstyle . | tee ${GITHUB_WORKSPACE}/.github/outputs/pydocstyle.txt || echo
      - name: Annotate with pydocstyle results
        uses: KarlTDebiec/LinterPrinter@feature/initial-implementation
        with:
          tool: pydocstyle
          tool_infile: .github/outputs/pydocstyle.txt
          files_to_annotate_infile: .github/outputs/all_changed_and_modified_files.json
      - name: pyright
        run: |
          cd ${GITHUB_WORKSPACE}
          poetry run pyright . | tee ${GITHUB_WORKSPACE}/.github/outputs/pyright.txt || echo
      - name: Annotate with pyright results
        uses: KarlTDebiec/LinterPrinter@feature/initial-implementation
        with:
          tool: pyright
          tool_infile: .github/outputs/pyright.txt
          files_to_annotate_infile: .github/outputs/all_changed_and_modified_files.json
      - name: pytest
        run: |
          export PACKAGE_ROOT=${GITHUB_WORKSPACE}/scinoephile
          cd ${GITHUB_WORKSPACE}/test
          poetry run pytest -v --cov=scinoephile --cov-report term . | tee ${GITHUB_WORKSPACE}/.github/outputs/pytest.txt || echo
      - name: Annotate with pytest results
        uses: KarlTDebiec/LinterPrinter@feature/initial-implementation
        with:
          tool: pytest
          tool_infile: .github/outputs/pytest.txt
          files_to_annotate_infile: .github/outputs/all_changed_and_modified_files.json